server.port = 8080
spring.application.name=order-service


#----------EUREKA----------#
eureka.instance.client.serverUrl.defaultZone = http://localhost:8761:eureka/


#----------DB & JPA & Hibernate----------#
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce_db
spring.datasource.username=admin
spring.datasource.password=mysql

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


#----------KAFKA----------#
bootstrap.server = 127.0.0.1:9092
kafka.approved.order.topic = order_approved_topic


#----------RABBITMQ----------#
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest


#----------ACTUATOR----------#
management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include=health, bus-refresh
management.endpoint.health.show-details=always


#----------CIRCUIT BREAKER----------#
resilience4j.circuitbreaker.instances.order-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.order-service.failureRateThreshold=75
resilience4j.circuitbreaker.instances.order-service.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.order-service.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.order-service.waitDurationInOpenState=4s
resilience4j.circuitbreaker.instances.order-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.order-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.order-service.slidingWindowType=COUNT_BASED


#----------RETRY----------#
#resilience4j.retry.instances.order-service.registerHealthIndicator=true
#resilience4j.retry.instances.order-service.maxRetryAttempts=1
#resilience4j.retry.instances.order-service.waitDuration=2s
#logging.level.io.github.resilience4j.circuitbreaker=DEBUG
#logging.level.root=WARN

#----------FEIGN CLIENT----------#
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=30000
feign.circuitbreaker.enabled=true


#----------ENDPOINTS----------#
base.endpoint =/api/v1
stock.base.endpoint =/stocks
reserve.stock.reserve.products.endpoint =/reserveProducts
stock.decrease.stocks.endpoint =/decreaseStocks

revenue.base.endpoint =/revenues
revenue.tax.rate.base.endpoint =/taxRate
revenue.get.specific.tax.rate.endpoint =/getSpecificTaxRate

payment.base.endpoint =/payments
payment.stripe.base.endpoint =/stripe
payment.pay.endpoint =/pay
payment.refund.endpoint =/refund


#----------CONSTANTS----------#
first.error = First Error: 
total.errors = Total Error(s): 

base.service.not.running.exception.msg =-SERVICE is not running at this moment. Try few minutes later.
reserve.stock.service.not.running.exception = RESERVE-STOCK
stock.service.not.running.exception = STOCK
payment.service.not.running.exception = PAYMENT
revenue.service.not.running.exception = REVENUE




