#server.port = 8100
spring.application.name= email-service
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
#logging.level.com.ozeryavuzaslan.emailservice=DEBUG


#----------CONFIG-SERVER----------#
spring.config.import=optional:configserver:http://localhost:8130


#----------DB & JPA & Hibernate----------#
#spring.datasource.url=jdbc:mysql://localhost:3306/email_db
#spring.datasource.username=admin
#spring.datasource.password=mysql
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.format_sql = true
#spring.jpa.properties.hibernate.use_sql_comments = true


#----------EUREKA----------#
#eureka.instance.client.serverUrl.defaultZone = http://localhost:8761:eureka/


#----------ACTUATOR----------#
##management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health, bus-refresh
#management.endpoint.health.show-details=always


#----------EMAIL----------#
email.username = ozeryavuzaslan
email.password = wetdybyszinmqzuf
#email.from = ozeryavuzaslan@yahoo.com
#
#email.smtp.auth.property.name=mail.smtp.auth
#email.smtp.auth.property.value=true
#email.smtp.starttls.enable.property.name=mail.smtp.starttls.enable
#email.smtp.starttls.enable.property.value=true
#email.smtp.host.property.name=mail.smtp.host
#email.smtp.host.property.value=smtp.mail.yahoo.com
#email.smtp.port.property.name=mail.smtp.port
#email.smtp.port.property.value=587


#----------KAFKA----------#
#kafka.email.group = email
#kafka.order.topic = order_topic
#kafka.consumer.offset = earliest
#bootstrap.server = 127.0.0.1:9092
#
##spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer


#----------RABBITMQ----------#
#rabbit.stock.email.queue.name = email.stock.notification
#rabbit.payment.email.queue.name = email.payment.notification
#rabbit.refund.email.queue.name = email.refund.notification
#
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest


#----------CONSTANTS----------#
#email.stock.subject = Your Product Has Been Out of Stock!!!
#email.stock.body = This product is out of stock! Please consider sending new ones to our warehouse.
#
#email.payment.subject = Payment is Successful!!!
#email.payment.body = Dear %s, here it is your payment details: \n
#email.body.stripe.payment= <br>You've paid %s %s at %s</br> <br>This is your e-invoice <a href="%s">INVOICE</a></br>
#
#email.refund.subject = Refund is Successful!!!
#email.refund.body = Dear %s, here it is your refund details: \n
#email.body.stripe.refund = <br>You've been refunded amount of %s %s from %s %s requested amount at %s</br>
#
#email.approved.order.subject = Your Order Has Been Approved!!!
#email.approved.order.body = Dear %s, here it is your order details: \n
#email.approved.order.body.details = <br>Your orderID is %s.</br><br>The order will be delivered to the %s after it is prepared and shipped.</br>
#
#email.preparing.order.subject = Your Order is Preparing!!!
#email.preparing.order.body = <br>Dear %s, your order is preparing.</br>
#
#email.in.cargo.order.subject = Your Order is in Cargo!!!
#email.in.cargo.order.body = <br>Dear %s, your order has given to the cargo company.</br>
#
#email.canceled.order.subject = Your Order Has Been Canceled!!!
#email.canceled.order.body = <br>Dear %s, your order has been canceled by your request.</br>
#
#email.delivered.order.subject = Your Order Has Been Delivered!!!
#email.delivered.order.body = <br>Dear %s, your order has been delivered.</br>
#
#hash.map.email.body.full.name=fullName
#
#hash.map.order.orderId.key =orderId
#hash.map.order.address1.key =address1
#hash.map.order.address2.key =address1
#hash.map.order.statusType.key =orderStatusType
#
#hash.map.product.code.key=productCode
#hash.map.product.name.key=productName
#hash.map.email.to.key=mailTo
#hash.map.email.cc.key=mailCc
#
#hash.map.email.body.payment.date=paymentDate
#hash.map.email.body.payment.total.price=totalPrice
#hash.map.email.body.payment.currency.type=currencyType
#hash.map.email.body.stripe.payment.receipt.url=receiptUrl
#
#hash.map.email.body.refund.date=refundDate
#hash.map.email.body.refund.request.amount=refundRequestAmount
#hash.map.email.body.refund.refunded.amount=refundedAmount


