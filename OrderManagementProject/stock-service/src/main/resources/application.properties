server.port = 8090
spring.application.name=STOCK-SERVICE


#----------EUREKA----------#
eureka.instance.client.serverUrl.defaultZone = http://localhost:8761:eureka/


#----------DB & JPA & Hibernate----------#
spring.datasource.url = jdbc:postgresql://localhost:5432/ecommercedb
spring.datasource.username = postgres
spring.datasource.password = postgres

spring.jpa.show-sql = true
hibernate.jdbc.batch_size = 20
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments = true
spring.jpa.data-platform = org.hibernate.dialect.PostgreSQLDialect


#----------REDIS----------#
stock.cache.name = stocks
category.cache.name = categories

spring.cache.type = redis
spring.redis.host = localhost
spring.redis.port = 6379
#spring.cache.redis.cache-null-values = true
#spring.cache.redis.time-to-live=40000


#----------RABBITMQ----------#
rabbit.stock.email.queue.name = email.stock.notification
rabbit.stock.email.exchange = email.stock.exchange

spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

#----------ACTUATOR----------#
management.endpoints.web.exposure.include=*


#----------CONSTANTS----------#
stock.get.by.id.endpoint = /getByProductId/{id}
category.get.by.id.endpoint = /{id}

first.error = First Error: 
total.errors = Total Error(s): 
stock.not.found = The requested stock is not found! Consider adding new stock.
stock.list.not.found = The requested stocks are not found!
category.not.found = The requested category is not found! Consider adding new category.
stock.amount.not.enough = There is no enough stock to take the requested amount of the product!

unique.constraint.violation = Do not attempt to create new products or categories on existing products. Already exists!
reserve.stock.unique.constraint.violation = Do not attempt to reserve products that already reserved for same order. Already exists!
unique.constraint.violation.sql.code = 23505
data.integrity.violation.exception.tax.stock.service.impl.method.name =reserveStock